name: Deploy GKE Flask + Streamlit

on:
  push:
    branches:
      - main-cloud
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Create and activate virtualenv, install dependencies
        working-directory: ./api
        shell: bash
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-mock

      - name: Run tests with pytest
        working-directory: ./api
        shell: bash
        run: |
          source .venv/bin/activate
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pytest -v ../tests/

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        shell: bash
        run: |
          chmod +x ./push_images.sh
          ./push_images.sh


      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Update Google Cloud SDK
        run: |
          gcloud components update --quiet
          gcloud components install gke-gcloud-auth-plugin --quiet

      - name: Set USE_GKE_GCLOUD_AUTH_PLUGIN env var
        run: echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      - name: Create GKE cluster
        run: |
          gcloud container clusters describe flask-streamlit-cluster --zone ${{ secrets.GCP_ZONE }} --format="value(name)" || \
          gcloud container clusters create flask-streamlit-cluster \
            --zone ${{ secrets.GCP_ZONE }} \
            --release-channel regular \
            --machine-type e2-medium \
            --num-nodes 1 \
            --enable-autoupgrade \
            --enable-autorepair \
            --image-type COS_CONTAINERD \
            --disk-size 100 \
            --enable-ip-alias \
            --enable-autoscaling \
            --min-nodes=1 \
            --max-nodes=3

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials flask-streamlit-cluster --zone ${{ secrets.GCP_ZONE }}


      - name: Install NGINX Ingress Controller
        run: |
          kubectl apply --validate=false -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.1/deploy/static/provider/cloud/deploy.yaml
          # aguardar o controller ficar pronto
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=180s


      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/flask-deployment.yaml
          kubectl apply -f k8s/flask-service.yaml
          kubectl apply -f k8s/streamlit-deployment.yaml
          kubectl apply -f k8s/streamlit-service.yaml
          kubectl apply -f k8s/ingress.yaml

      - name: Wait for pods to be ready
        run: |
          kubectl wait --for=condition=Ready pod --all --timeout=300s
          kubectl get pods -o wide
